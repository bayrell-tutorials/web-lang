namespace App.UI;

use Runtime.MessageRPC;
use Runtime.Web.Component;
use Runtime.Web.LayoutModel;
use Runtime.Web.RenderContainer;
use Runtime.Web.RenderHelper;
use Runtime.Web.Annotations.Route;
use Runtime.Web.Annotations.RouteList;
use Runtime.Web.Annotations.Template;
use App.Model.IndexPageModel;


@RouteList{}
@Template{ "model_name": classof IndexPageModel }
class IndexPage extends Component
{
	
	/**
	 * Returns module name
	 */
	lambda string moduleName() => "App";
	
	
	
	/**
	 * Route Action
	 * @return WebContainer
	 */
	@Route{ "uri": "/" }
	static async RenderContainer IndexPage(RenderContainer container)
	{
		IndexPageModel model = new IndexPageModel
		{
			"content": "Hello world",
		};
		
		/* Set title */
		container <= layout <= title <= "111";
		
		/* Create model */
		container <= layout <= page_class <= classof IndexPage;
		container <= layout <= page_model <= model;
		
		return container;
	}
	
	
	
	/**
	 * Returns required components
	 */
	lambda Collection<string> components() =>
	[
	];
	
	
	
	/**
	 * Component css
	 */
	lambda string css(Dict<string> vars) =>
		@css{
			%content{
				text-align: center;
				padding-top: 50px;
			}
		}
	;
	
	
	
	/**
	 * Component render
	 */
	lambda html render(LayoutModel layout, IndexPageModel model, Dict params, html content, var control) =>
	
		<div @class='content' @key='content'>
			@{ model.content }
		</div>
		
	;
	
	
}